{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rokas\\\\Desktop\\\\Files\\\\expo\\\\FinanceApp\\\\FinanceApp\\\\screens\\\\InfiniteScroll.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { database } from \"../App\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar InfiniteScroll = function (_React$Component) {\n  _inherits(InfiniteScroll, _React$Component);\n\n  var _super = _createSuper(InfiniteScroll);\n\n  function InfiniteScroll(props) {\n    var _this;\n\n    _classCallCheck(this, InfiniteScroll);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      try {\n        _this.retrieveData();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.retrieveData = function _callee() {\n      var initialQuery, documentSnapshots, documentData, lastVisible;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log('Retrieving Data');\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.props.database.collection('users').where('id', '<=', 20).orderBy('id').limit(_this.state.limit));\n\n            case 4:\n              initialQuery = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(initialQuery.get());\n\n            case 7:\n              documentSnapshots = _context.sent;\n              documentData = documentSnapshots.docs.map(function (document) {\n                return document.data();\n              });\n              lastVisible = documentData[documentData.length - 1].id;\n\n              _this.setState({\n                documentData: documentData,\n                lastVisible: lastVisible,\n                loading: false\n              });\n\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n\n    _this.retrieveMore = function _callee2() {\n      var additionalQuery, documentSnapshots, documentData, lastVisible;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              _this.setState({\n                refreshing: true\n              });\n\n              console.log('Retrieving additional Data');\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(_this.props.database.collection('users').where('id', '<=', 20).orderBy('id').startAfter(_this.state.lastVisible).limit(_this.state.limit));\n\n            case 5:\n              additionalQuery = _context2.sent;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(additionalQuery.get());\n\n            case 8:\n              documentSnapshots = _context2.sent;\n              documentData = documentSnapshots.docs.map(function (document) {\n                return document.data();\n              });\n              lastVisible = documentData[documentData.length - 1].id;\n\n              _this.setState({\n                documentData: [].concat(_toConsumableArray(_this.state.documentData), _toConsumableArray(documentData)),\n                lastVisible: lastVisible,\n                refreshing: false\n              });\n\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    };\n\n    _this.renderHeader = function () {\n      try {\n        return React.createElement(Text, {\n          style: styles.headerText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }\n        }, \"Items\");\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.renderFooter = function () {\n      try {\n        if (_this.state.loading) {\n          return React.createElement(ActivityIndicator, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 11\n            }\n          });\n        } else {\n          return null;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.state = {\n      documentData: [],\n      limit: 9,\n      lastVisible: null,\n      loading: true,\n      refreshing: false\n    };\n    return _this;\n  }\n\n  _createClass(InfiniteScroll, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.documentData,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: styles.itemContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }\n          }, \"(ID: \", item.id, \") \", item.first_name, \" \", item.last_name), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }\n          }, \"Hello\"));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return String(index);\n        },\n        ListHeaderComponent: this.renderHeader,\n        ListFooterComponent: this.renderFooter,\n        onEndReached: this.retrieveMore,\n        onEndReachedThreshold: 0,\n        refreshing: this.state.refreshing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return InfiniteScroll;\n}(React.Component);\n\nexport { InfiniteScroll as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: height,\n    width: width\n  },\n  headerText: {\n    fontFamily: 'System',\n    fontSize: 36,\n    fontWeight: '600',\n    color: '#000',\n    marginLeft: 12,\n    marginBottom: 12\n  },\n  itemContainer: {\n    height: 80,\n    width: width,\n    borderWidth: .2,\n    borderColor: '#000',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontFamily: 'System',\n    fontSize: 16,\n    fontWeight: '400',\n    color: '#000'\n  }\n});","map":{"version":3,"sources":["C:/Users/Rokas/Desktop/Files/expo/FinanceApp/FinanceApp/screens/InfiniteScroll.js"],"names":["React","Component","database","Dimensions","get","height","width","InfiniteScroll","props","componentDidMount","retrieveData","error","console","log","collection","where","orderBy","limit","state","initialQuery","documentSnapshots","documentData","docs","map","document","data","lastVisible","length","id","setState","loading","retrieveMore","refreshing","startAfter","additionalQuery","renderHeader","styles","headerText","renderFooter","container","item","itemContainer","first_name","last_name","index","String","StyleSheet","create","fontFamily","fontSize","fontWeight","color","marginLeft","marginBottom","borderWidth","borderColor","justifyContent","alignItems","text"],"mappings":"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","sourcesContent":["// Imports: Dependencies\r\nimport React, { Component } from 'react';\r\nimport { ActivityIndicator, Dimensions, FlatList, SafeAreaView, StyleSheet, Text, View } from 'react-native';\r\nimport { database } from '../App';\r\n// Screen Dimensions\r\nconst { height, width } = Dimensions.get('window');\r\n// Screen: Infinite Scroll\r\nexport default class InfiniteScroll extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      documentData: [],\r\n      limit: 9,\r\n      lastVisible: null,\r\n      loading: true,\r\n      refreshing: false,\r\n    };\r\n  }\r\n  // Component Did Mount\r\n  componentDidMount = () => {\r\n    try {\r\n      // Cloud Firestore: Initial Query\r\n      this.retrieveData();\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // Retrieve Data\r\n  retrieveData = async () => {\r\n    try {\r\n        \r\n    \r\n      console.log('Retrieving Data');\r\n      // Cloud Firestore: Query\r\n      let initialQuery = await this.props.database.collection('users')\r\n        .where('id', '<=', 20)\r\n        .orderBy('id')\r\n        .limit(this.state.limit)\r\n      // Cloud Firestore: Query Snapshot\r\n      let documentSnapshots = await initialQuery.get();\r\n      // Cloud Firestore: Document Data\r\n      let documentData = documentSnapshots.docs.map(document => document.data());\r\n      // Cloud Firestore: Last Visible Document (Document ID To Start From For Proceeding Queries)\r\n      let lastVisible = documentData[documentData.length - 1].id;\r\n      // Set State\r\n      this.setState({\r\n        documentData: documentData,\r\n        lastVisible: lastVisible,\r\n        loading: false,\r\n      });\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // Retrieve More\r\n  retrieveMore = async () => {\r\n    try {\r\n      // Set State: Refreshing\r\n      this.setState({\r\n        refreshing: true,\r\n      });\r\n      console.log('Retrieving additional Data');\r\n      // Cloud Firestore: Query (Additional Query)\r\n      let additionalQuery = await this.props.database.collection('users')\r\n        .where('id', '<=', 20)\r\n        .orderBy('id')\r\n        .startAfter(this.state.lastVisible)\r\n        .limit(this.state.limit)\r\n      // Cloud Firestore: Query Snapshot\r\n      let documentSnapshots = await additionalQuery.get();\r\n      // Cloud Firestore: Document Data\r\n      let documentData = documentSnapshots.docs.map(document => document.data());\r\n      // Cloud Firestore: Last Visible Document (Document ID To Start From For Proceeding Queries)\r\n      let lastVisible = documentData[documentData.length - 1].id;\r\n      // Set State\r\n      this.setState({\r\n        documentData: [...this.state.documentData, ...documentData],\r\n        lastVisible: lastVisible,\r\n        refreshing: false,\r\n      });\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // Render Header\r\n  renderHeader = () => {\r\n    try {\r\n      return (\r\n        <Text style={styles.headerText}>Items</Text>\r\n      )\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // Render Footer\r\n  renderFooter = () => {\r\n    try {\r\n      // Check If Loading\r\n      if (this.state.loading) {\r\n        return (\r\n          <ActivityIndicator />\r\n        )\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // Čia pakeisti reikės item.id į ką tu tenai turi\r\n  render() {\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        <FlatList\r\n          // Data\r\n          data={this.state.documentData}\r\n          // Render Items\r\n          renderItem={({ item }) => (\r\n            <View style={styles.itemContainer}>\r\n              <Text>(ID: {item.id}) {item.first_name} {item.last_name}</Text>\r\n              <Text>Hello</Text>\r\n            </View>\r\n          )}\r\n          // Item Key\r\n          keyExtractor={(item, index) => String(index)}\r\n          // Header (Title)\r\n          ListHeaderComponent={this.renderHeader}\r\n          // Footer (Activity Indicator)\r\n          ListFooterComponent={this.renderFooter}\r\n          // On End Reached (Takes a function)\r\n          onEndReached={this.retrieveMore}\r\n          // How Close To The End Of List Until Next Data Request Is Made\r\n          onEndReachedThreshold={0}\r\n          // Refreshing (Set To True When End Reached)\r\n          refreshing={this.state.refreshing}\r\n        />\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n}\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: height,\r\n    width: width,\r\n  },\r\n  headerText: {\r\n    fontFamily: 'System',\r\n    fontSize: 36,\r\n    fontWeight: '600',\r\n    color: '#000',\r\n    marginLeft: 12,\r\n    marginBottom: 12,\r\n  },\r\n  itemContainer: {\r\n    height: 80,\r\n    width: width,\r\n    borderWidth: .2,\r\n    borderColor: '#000',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontFamily: 'System',\r\n    fontSize: 16,\r\n    fontWeight: '400',\r\n    color: '#000',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}